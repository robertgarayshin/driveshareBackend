basePath: /
definitions:
  models.LoginInfo:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  models.Payload:
    properties:
      auth_token:
        type: string
      id:
        type: integer
      token_type:
        description: Role string `json:"role"`
        type: string
    type: object
  models.User:
    properties:
      confirmationToken:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
      passwordHash:
        type: string
      surname:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: rigarayshin@edu.hse.ru
    name: Robert Garayshin
  description: This is API documentation for Driveshare platform
  title: Driveshare API
  version: 0.0.2
paths:
  /auth/signin:
    post:
      consumes:
      - application/json
      operationId: signin
      parameters:
      - description: query params
        in: body
        name: Login
        required: true
        schema:
          $ref: '#/definitions/models.LoginInfo'
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/models.Payload'
      summary: Login endpoint
      tags:
      - auth
  /auth/signup:
    post:
      consumes:
      - application/json
      operationId: signup
      parameters:
      - description: query params
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/models.User'
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: Registration endpoint
      tags:
      - auth
  /user/{id}:
    delete:
      operationId: deleteProfile
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: Profile edit endpoint
      tags:
      - user
    get:
      consumes:
      - application/json
      operationId: getById
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/models.User'
      summary: Get User Profile by id
      tags:
      - user
    put:
      consumes:
      - application/json
      operationId: editProfile
      parameters:
      - description: user profile
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/models.User'
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: Profile edit endpoint
      tags:
      - user
  /verify/{id}/{token}:
    get:
      operationId: confirm
      parameters:
      - description: query params
        in: body
        name: Login
        required: true
        schema:
          $ref: '#/definitions/models.LoginInfo'
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: Email Confirmation endpoint
      tags:
      - email
swagger: "2.0"

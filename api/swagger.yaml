basePath: /
definitions:
  models.Car:
    properties:
      booked:
        type: boolean
      brand:
        type: string
      id:
        type: integer
      model:
        type: string
      price:
        type: integer
      produced:
        type: string
    type: object
  models.LoginInfo:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  models.Payload:
    properties:
      auth_token:
        type: string
      id:
        type: integer
      token_type:
        description: Role string `json:"role"`
        type: string
    type: object
  models.User:
    properties:
      confirmationToken:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
      passwordHash:
        type: string
      surname:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: rigarayshin@edu.hse.ru
    name: Robert Garayshin
  description: This is API documentation for Driveshare platform
  title: Driveshare API
  version: 0.0.2
paths:
  /:
    get:
      operationId: home
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: Main page handler
      tags:
      - pages_demo
  /about:
    get:
      operationId: about
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: About page handler
      tags:
      - pages_demo
  /auth/signin:
    post:
      consumes:
      - application/json
      operationId: signin
      parameters:
      - description: query params
        in: body
        name: Login
        required: true
        schema:
          $ref: '#/definitions/models.LoginInfo'
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/models.Payload'
      summary: Login endpoint
      tags:
      - auth
  /auth/signup:
    post:
      consumes:
      - application/json
      operationId: signup
      parameters:
      - description: query params
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/models.User'
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: Registration endpoint
      tags:
      - auth
  /car:
    get:
      operationId: getAllCars
      responses:
        "200":
          description: ok
          schema:
            items:
              $ref: '#/definitions/models.Car'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Get all cars
      tags:
      - car
  /car/{id}:
    delete:
      operationId: deleteCarById
      parameters:
      - description: Car ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: ok
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Delete car by id
      tags:
      - car
    get:
      operationId: getCarById
      parameters:
      - description: Car ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/models.Car'
      security:
      - ApiKeyAuth: []
      summary: Get car by id
      tags:
      - car
  /car/available:
    get:
      operationId: getAvailableCars
      responses:
        "200":
          description: ok
          schema:
            items:
              $ref: '#/definitions/models.Car'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Get available cars
      tags:
      - car
  /car/book/{id}:
    put:
      operationId: bookCarById
      parameters:
      - description: Car ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: ok
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Book car by id
      tags:
      - car
  /car/cancel/{id}:
    put:
      operationId: cancelBooking
      parameters:
      - description: Car ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: ok
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Cancel booking
      tags:
      - car
  /car/new:
    post:
      consumes:
      - application/json
      operationId: postCar
      parameters:
      - description: query params
        in: body
        name: Car
        required: true
        schema:
          $ref: '#/definitions/models.Car'
      responses:
        "200":
          description: ok
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: New car publishing endpoint
      tags:
      - car
  /catalog:
    get:
      operationId: catalog
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: Catalog page handler
      tags:
      - pages_demo
  /user/{id}:
    delete:
      operationId: deleteProfile
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: Profile edit endpoint
      tags:
      - user
    get:
      consumes:
      - application/json
      operationId: getById
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/models.User'
      summary: Get User Profile by id
      tags:
      - user
    put:
      consumes:
      - application/json
      operationId: editProfile
      parameters:
      - description: user profile
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/models.User'
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: Profile edit endpoint
      tags:
      - user
  /verify/{id}/{token}:
    get:
      operationId: confirm
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: integer
      - description: Token String
        in: path
        name: token
        required: true
        type: string
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: Email Confirmation endpoint
      tags:
      - email
securityDefinitions:
  ApiKeyAuth:
    description: Description for what is this security definition being used
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"

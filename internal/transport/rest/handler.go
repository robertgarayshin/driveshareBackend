package rest

import (
	_ "driveshare_backend/api" // docs are generated by Swag CLI, you have to import it.
	"driveshare_backend/internal/models"
	"driveshare_backend/internal/service"
	"encoding/json"
	"log"
	"net/http"
)

// SignupHandler
//
//		@Summary		Registration endpoint
//		@ID				signup
//	 	@Accept json
//		@Tags auth
//		@Param User body models.User true "query params"
//		@Success		200	{string}	string	"ok"
//		@Router			/auth/signup [post]
func SignupHandler(w http.ResponseWriter, r *http.Request) {
	decoder := json.NewDecoder(r.Body)
	var user models.User
	err := decoder.Decode(&user)
	if err != nil {
		return
	}
	user.Password, err = service.HashPassword(user.Password)
	if err != nil {
		return
	}
	log.Println(user)
}

// SigninHandler
//
//		@Summary		Login endpoint
//		@ID				signin
//	 	@Accept json
//		@Tags auth
//		@Param Login body models.LoginInfo true "query params"
//		@Success		200	{string}	string	"ok"
//		@Router			/auth/signin [post]
func SigninHandler(w http.ResponseWriter, r *http.Request) {
	decoder := json.NewDecoder(r.Body)
	var credentials models.LoginInfo
	err := decoder.Decode(&credentials)
	if err != nil {
		return
	}
	// get expected password

	token := service.CreateJwt(credentials, w)
	tokenString, err := token.SignedString(service.JwtKey)
	if err != nil {
		w.WriteHeader(http.StatusInternalServerError)
	}
	log.Println(tokenString)
	log.Println(w.Write([]byte(tokenString)))
}
